[{"/Users/anzhelika/Desktop/mesto-react/src/index.js":"1","/Users/anzhelika/Desktop/mesto-react/src/reportWebVitals.js":"2","/Users/anzhelika/Desktop/mesto-react/src/components/App.js":"3","/Users/anzhelika/Desktop/mesto-react/src/components/PopupWithForm.js":"4","/Users/anzhelika/Desktop/mesto-react/src/components/Header.js":"5","/Users/anzhelika/Desktop/mesto-react/src/components/Main.js":"6","/Users/anzhelika/Desktop/mesto-react/src/components/ImagePopup.js":"7","/Users/anzhelika/Desktop/mesto-react/src/components/Footer.js":"8","/Users/anzhelika/Desktop/mesto-react/src/utils/Api.js":"9","/Users/anzhelika/Desktop/mesto-react/src/components/Card.js":"10"},{"size":546,"mtime":1667077503541,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1667077503542,"results":"13","hashOfConfig":"12"},{"size":4451,"mtime":1667077503468,"results":"14","hashOfConfig":"12"},{"size":851,"mtime":1667077503471,"results":"15","hashOfConfig":"12"},{"size":269,"mtime":1667077503469,"results":"16","hashOfConfig":"12"},{"size":2338,"mtime":1667077503470,"results":"17","hashOfConfig":"12"},{"size":498,"mtime":1667077503470,"results":"18","hashOfConfig":"12"},{"size":176,"mtime":1667077503469,"results":"19","hashOfConfig":"12"},{"size":1901,"mtime":1667077503542,"results":"20","hashOfConfig":"12"},{"size":855,"mtime":1667077503469,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wsf0mj",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/anzhelika/Desktop/mesto-react/src/index.js",[],[],"/Users/anzhelika/Desktop/mesto-react/src/reportWebVitals.js",[],[],"/Users/anzhelika/Desktop/mesto-react/src/components/App.js",["54","55"],[],"import React, { useState, useEffect } from 'react';\nimport api from '../utils/Api';\nimport ReactDOM from 'react-dom/client';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport '../index.css';\n\nfunction App() {\n  const [cards, setCards] = React.useState([]);\n\n  useEffect(() => {\n    api.getInicialCards()\n      .then(data => {\n        setCards(data);\n      }).catch((err) => console.log(err));\n  });\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState('');\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  }\n\n  function handleCardClick(data) {\n    setIsImagePopupOpen(!selectedCard);\n    setSelectedCard(data);\n\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n    setSelectedCard('');\n  }\n\n  return (\n    <div className=\"page\">\n      <Header />\n      <Main\n        onEditAvatar={handleEditAvatarClick}\n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddPlaceClick}\n        onCardClick={handleCardClick}\n        cards={cards}\n      />\n      <Footer />\n\n      <PopupWithForm\n        name='avatar'\n        title='Обновить аватар'\n        buttonSave='Сохранить'\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n      >\n        <label className=\"popup__label popup__label_last-element\">\n          <input name='avatar' type=\"url\" id=\"avatar\" placeholder=\"Ссылка на картинку\"\n            className=\"popup__input popup__input_type_avatar\" required />\n          <span className=\"avatar-input-error popup__input-error-job\"></span>\n        </label>\n      </PopupWithForm>\n\n      <PopupWithForm\n        name='edit'\n        title='Редактировать профиль'\n        buttonSave='Сохранить'\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n      >\n        <label className=\"popup__label\">\n          <input name=\"name\" type=\"text\" id=\"username\" minLength=\"2\" maxLength=\"40\"\n            placeholder=\"Имя\" className=\"popup__input popup__input_type_name\" required />\n          <span className=\"username-input-error popup__input-error-name\"></span>\n        </label>\n\n        <label className=\"popup__label popup__label_last-element\">\n          <input name=\"about\" type=\"text\" id=\"biography\" minLength=\"2\" maxLength=\"200\" placeholder=\"Работа\" className=\"popup__input popup__input_type_job\" required />\n          <span className=\"biography-input-error popup__input-error-job\"></span>\n        </label>\n\n      </PopupWithForm>\n\n      <PopupWithForm\n        name='add'\n        title='Новое место'\n        buttonSave='Создать'\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n      >\n        <label className=\"popup__label\">\n          <input name='name' type=\"text\" id=\"namecard\" minLength=\"2\" maxLength=\"30\" placeholder=\"Название\"\n            className=\"popup__input popup__input_type_name\" required />\n          <span className=\"namecard-input-error popup__input-error-name\"></span>\n        </label>\n\n        <label className=\"popup__label popup__label_last-element\">\n          <input name='link' type=\"url\" id=\"link\" placeholder=\"Ссылка на картинку\"\n            className=\"popup__input popup__input_type_job\" required />\n          <span className=\"link-input-error popup__input-error-job\"></span>\n        </label>\n      </PopupWithForm>\n\n      <PopupWithForm\n        name='delete'\n        title='Вы уверены?'\n        buttonSave='Да'\n        onClose={closeAllPopups}\n      />\n\n      <ImagePopup\n        card={selectedCard}\n        isOpen={isImagePopupOpen}\n        onClose={closeAllPopups}\n      />\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/anzhelika/Desktop/mesto-react/src/components/PopupWithForm.js",[],[],"/Users/anzhelika/Desktop/mesto-react/src/components/Header.js",[],[],"/Users/anzhelika/Desktop/mesto-react/src/components/Main.js",["56","57","58","59","60"],[],"import React, { useState, useEffect } from 'react';\nimport userEvent from '@testing-library/user-event';\nimport { useInsertionEffect } from 'react';\nimport editAvatar from '../images/editAvatar.png';\nimport api from '../utils/Api';\nimport Card from './Card';\nimport cardDelete from '../images/deleteCard.png';\n\nfunction deleteCard() {\n  document.querySelector('.popup_type_delete').classList.add('popup_opened');\n  console.log(document.querySelector('.popup_type_delete'));\n}\n\nfunction Main(props) {\n  const [userName, setUserName] = React.useState('');\n  const [userDescription, setUserDescription] = React.useState('');\n  const [userAvatar, setUserAvatar] = React.useState('');\n\n  const cards = props.cards;\n\n  useEffect(() => {\n    api.getDdataUser()\n      .then((data) => {\n        setUserName(data.name);\n        setUserDescription(data.about);\n        setUserAvatar(data.avatar);\n      }).catch((err) => console.log(err));\n  });\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n\n        <div className=\"profile__avatar-container\">\n          <div className=\"profile__avatar-icon\">\n            <img className=\"profile__avatar-edit\" src={editAvatar} alt=\"Иконка карандаш\"\n              onClick={props.onEditAvatar}\n            />\n          </div>\n          <img className=\"profile__photo\" alt=\"Фото профиля\"\n            src={userAvatar}\n          />\n        </div>\n\n        <div className=\"profile__text-box\">\n          <h1 className=\"profile__title\" aria-label=\"Имя профиля\">{userName}</h1>\n          <button className=\"profile__edit\" aria-label=\"Кнопка редактировать информацию о себе\"\n            onClick={props.onEditProfile}\n\n          ></button>\n          <p className=\"profile__subtitle\">{userDescription}</p>\n        </div>\n\n        <button className=\"profile__button-add\" aria-label=\"Кнопка добавить пост\"\n          onClick={props.onAddPlace}\n        ></button>\n      </section>\n\n      <section className=\"cards\" aria-label=\"Блок с карточками мест\">\n\n        {\n          cards.map((card) => <Card key={card._id} id={card._id} name={card.name} link={card.link} likes={card.likes.length} onCardClick={props.onCardClick} />)\n        }\n\n      </section>\n    </main>\n  );\n}\n\nexport default Main;","/Users/anzhelika/Desktop/mesto-react/src/components/ImagePopup.js",[],[],"/Users/anzhelika/Desktop/mesto-react/src/components/Footer.js",[],[],"/Users/anzhelika/Desktop/mesto-react/src/utils/Api.js",[],[],"/Users/anzhelika/Desktop/mesto-react/src/components/Card.js",[],[],{"ruleId":"61","severity":1,"message":"62","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":25},{"ruleId":"61","severity":1,"message":"65","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":16},{"ruleId":"61","severity":1,"message":"62","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":25},{"ruleId":"61","severity":1,"message":"66","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":17},{"ruleId":"61","severity":1,"message":"67","line":3,"column":10,"nodeType":"63","messageId":"64","endLine":3,"endColumn":28},{"ruleId":"61","severity":1,"message":"68","line":7,"column":8,"nodeType":"63","messageId":"64","endLine":7,"endColumn":18},{"ruleId":"61","severity":1,"message":"69","line":9,"column":10,"nodeType":"63","messageId":"64","endLine":9,"endColumn":20},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'userEvent' is defined but never used.","'useInsertionEffect' is defined but never used.","'cardDelete' is defined but never used.","'deleteCard' is defined but never used."]